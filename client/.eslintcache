[{"C:\\Users\\sherm\\Desktop\\LifeHack 2021\\LifeHack2021\\client\\src\\index.js":"1","C:\\Users\\sherm\\Desktop\\LifeHack 2021\\LifeHack2021\\client\\src\\App.js":"2","C:\\Users\\sherm\\Desktop\\LifeHack 2021\\LifeHack2021\\client\\src\\components\\Register.js":"3","C:\\Users\\sherm\\Desktop\\LifeHack 2021\\LifeHack2021\\client\\src\\components\\StudentDashboard.js":"4","C:\\Users\\sherm\\Desktop\\LifeHack 2021\\LifeHack2021\\client\\src\\components\\Login.js":"5","C:\\Users\\sherm\\Desktop\\LifeHack 2021\\LifeHack2021\\client\\src\\components\\School_Options.js":"6"},{"size":230,"mtime":1627035381023,"results":"7","hashOfConfig":"8"},{"size":2509,"mtime":1627066632983,"results":"9","hashOfConfig":"8"},{"size":5991,"mtime":1627059729002,"results":"10","hashOfConfig":"8"},{"size":7622,"mtime":1627066632985,"results":"11","hashOfConfig":"8"},{"size":3688,"mtime":1627059729001,"results":"12","hashOfConfig":"8"},{"size":691,"mtime":1627059729002,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"y75g2i",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sherm\\Desktop\\LifeHack 2021\\LifeHack2021\\client\\src\\index.js",[],["28","29"],"C:\\Users\\sherm\\Desktop\\LifeHack 2021\\LifeHack2021\\client\\src\\App.js",[],"C:\\Users\\sherm\\Desktop\\LifeHack 2021\\LifeHack2021\\client\\src\\components\\Register.js",[],"C:\\Users\\sherm\\Desktop\\LifeHack 2021\\LifeHack2021\\client\\src\\components\\StudentDashboard.js",["30","31"],"import React, { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction StudentDashboard({ setAuth }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [quote, setQuote] = useState(null);\r\n  const [completed, setCompleted] = useState(false);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [answer1, setAnswer1] = useState(null);\r\n  const [answer2, setAnswer2] = useState(null);\r\n  const [answer3, setAnswer3] = useState(null);\r\n  const [answer4, setAnswer4] = useState(null);\r\n  const [answer5, setAnswer5] = useState(null);\r\n\r\n  const getAll = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/studentDashboard/\", {\r\n        method: \"GET\",\r\n        headers: { token: localStorage.token }, //from middleware\r\n      });\r\n\r\n      const parseRes = await response.json();\r\n      const messages = JSON.parse(parseRes.messages);\r\n      const quote = JSON.parse(parseRes.quote);\r\n      const completed = JSON.parse(parseRes.has_done_daily_declaration);\r\n      console.log(quote);\r\n\r\n      setName(parseRes.user_name);\r\n      setMessages(messages);\r\n      setQuote(quote);\r\n      setCompleted(completed);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAll();\r\n  }, []);\r\n\r\n  const getQuote = () => {\r\n    return (\r\n      <div>\r\n        <h2>{quote[\"content\"]}</h2>\r\n        <h3>~ {quote[\"author_name\"]}</h3>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Triggered\");\r\n    localStorage.removeItem(\"token\");\r\n    setAuth(false);\r\n    toast.success(\"Logged out successfully\");\r\n  };\r\n\r\n  const submitAnswers = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/studentDashboard/submitAnswers/\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            token: localStorage.token, //from middleware\r\n            answer1: answer1,\r\n            answer2: answer2,\r\n            answer3: answer3,\r\n            answer4: answer4,\r\n            answer5: answer5,\r\n          },\r\n        }\r\n      );\r\n      setCompleted(true);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  const selectResponse = (setState, name) => {\r\n    return (\r\n      <div>\r\n        <input\r\n          class=\"form-check-input\"\r\n          type=\"radio\"\r\n          name={name}\r\n          id=\"option1\"\r\n          onChange={() => setState(1)}\r\n        ></input>\r\n        <label class=\"form-check-label\" for=\"option1\">\r\n          1\r\n        </label>\r\n        <input\r\n          class=\"form-check-input\"\r\n          type=\"radio\"\r\n          name={name}\r\n          id=\"option2\"\r\n          onChange={() => setState(2)}\r\n        ></input>\r\n        <label class=\"form-check-label\" for=\"option2\">\r\n          2\r\n        </label>\r\n        <input\r\n          class=\"form-check-input\"\r\n          type=\"radio\"\r\n          name={name}\r\n          id=\"option3\"\r\n          onChange={() => setState(3)}\r\n        ></input>\r\n        <label class=\"form-check-label\" for=\"option3\">\r\n          3\r\n        </label>\r\n        <input\r\n          class=\"form-check-input\"\r\n          type=\"radio\"\r\n          name={name}\r\n          id=\"option4\"\r\n          onChange={() => setState(4)}\r\n        ></input>\r\n        <label class=\"form-check-label\" for=\"option4\">\r\n          4\r\n        </label>\r\n        <input\r\n          class=\"form-check-input\"\r\n          type=\"radio\"\r\n          name={name}\r\n          id=\"option5\"\r\n          onChange={() => setState(5)}\r\n        ></input>\r\n        <label class=\"form-check-label\" for=\"option5\">\r\n          5\r\n        </label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const survey = () => {\r\n    if (completed) {\r\n      return <div>{getQuote()}</div>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div>How happy are you today?</div>\r\n          {selectResponse(setAnswer1, \"q1\")}\r\n          <div>How stressed are you today?</div>\r\n          {selectResponse(setAnswer2, \"q2\")}\r\n          <div>Question3</div>\r\n          {selectResponse(setAnswer3, \"q3\")}\r\n          <div>Question4</div>\r\n          {selectResponse(setAnswer4, \"q4\")}\r\n          <div>Question5</div>\r\n          {selectResponse(setAnswer5, \"q5\")}\r\n          <button\r\n            className=\"btn btn-primary btn-sm \"\r\n            onClick={() => submitAnswers()}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const inputMessage = () => {\r\n    return (\r\n      <div>\r\n        <form onSubmit={submitMessage}>\r\n          <textarea\r\n            placeholder=\"Enter your message here!\"\r\n            value={newMessage}\r\n            onChange={(msg) => setNewMessage(msg.target.value)}\r\n            style={{width : \"500px\"}}\r\n          />\r\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\"/>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const submitMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (newMessage!=\"\") {\r\n      console.log(newMessage);\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:5000/studentDashboard/submitMessage/\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              token: localStorage.token, //from middleware\r\n              newMessage: newMessage,\r\n            },\r\n          }\r\n        );\r\n        setNewMessage(\"\");\r\n        getAll();\r\n      } catch (err) {\r\n        console.log(err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  let styles = {\r\n    header: {\r\n      paddingTop: 20,\r\n      paddingBottom: 20, \r\n      paddingLeft: 60,\r\n      paddingRight: 60,\r\n      backgroundColor: '#5C6BC0',\r\n    },\r\n    headerText: {\r\n      color: 'white',\r\n      fontWeight: 'bold',\r\n      fontSize: 20,\r\n    },\r\n    button: {\r\n      borderColor: 'white',\r\n      borderWidth: 2,\r\n      backgroundColor: '#5C6BC0',\r\n      color: 'white',\r\n      marginLeft: 20,\r\n    },\r\n    input: {\r\n      width : \"500px\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"d-flex justify-content-between\" style={styles.header}>\r\n        <div style={styles.headerText}>Mind Hack</div>\r\n        <div class=\"d-flex justify-content-between\" >\r\n          <div style={styles.headerText}>Welcome {name}!</div>\r\n          <button\r\n            className=\"btn btn-primary btn-sm \"\r\n            onClick={(e) => logout(e)}\r\n            id=\"logout\"\r\n            style={styles.button}\r\n          >\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <nav\r\n          id=\"sidebarMenu\"\r\n          class=\"col-md-3 d-md-block sidebar collapse position-fixed shadow p-3 mb-5 rounded bg-light\"\r\n          style = {{\"height\":\"100vh\"}}\r\n        >\r\n \r\n          {survey()}\r\n\r\n        </nav>\r\n      </div>\r\n\r\n      <div className=\"col-md-9 ms-sm-auto px-md-4\">\r\n      <div class=\"row row-cols-1 row-cols-md-2 g-4\" style={{marginTop: 10,}}>\r\n        {messages.map((message) => {\r\n              return (\r\n                <div class=\"card border-primary mb-3\" style={{width: 400, marginLeft: 15, marginRight: 15,}}>\r\n                  <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">{message.message_content}</h5>\r\n                  </div>\r\n                  <div class=\"card-footer bg-transparent border-success\">\r\n                  <div>{message.school_name}</div>\r\n                  <div>{message.date_time}</div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n      </div> \r\n        {inputMessage()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentDashboard;","C:\\Users\\sherm\\Desktop\\LifeHack 2021\\LifeHack2021\\client\\src\\components\\Login.js",[],"C:\\Users\\sherm\\Desktop\\LifeHack 2021\\LifeHack2021\\client\\src\\components\\School_Options.js",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":61,"column":13,"nodeType":"38","messageId":"39","endLine":61,"endColumn":21},{"ruleId":"36","severity":1,"message":"37","line":185,"column":13,"nodeType":"38","messageId":"39","endLine":185,"endColumn":21},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]